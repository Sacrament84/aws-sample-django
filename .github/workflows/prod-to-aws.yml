name: Build and push to AWS main branch

on:
  push:
    branches: [ main ]

jobs:

    deploy:
    
        name: Setup AWS Account
        runs-on: ubuntu-latest
        steps:

        - name: Check Out Repo 
          uses: actions/checkout@v2
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-north-1

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install req
          run: pip install -r requirements.txt

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          
        - name: Build and Push Docker image
          id: build-image
          env:
             ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
             ECR_REPOSITORY: django-prod
             IMAGE_TAG: ${{ github.run_number }}
          run: |
             docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
             docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
             echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        - name: Download Task Definition
          run: |
             aws ecs describe-task-definition \
             --task-definition django-prod \
             --query taskDefinition > task-definition.json

        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json
            container-name: django-prod
            image: ${{ steps.build-image.outputs.image }}

       - name: Deploy Amazon ECS task definition
         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
         with:
           task-definition: ${{ steps.task-def.outputs.task-definition }}
           service: django-prod
           cluster: django-dev
           wait-for-service-stability: "true"   
        #####END#####